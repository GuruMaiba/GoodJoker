@using GoodJoker.Models
@model Lottery
@{
    string url = "http://GJ.com/Lottery/Details/" + Model.Id;
    ViewBag.Title = $"Розыгрыш \"{Model.Title}\"";
    ViewBag.Description = (Model.ShortDescription.Length > 140) ? Model.ShortDescription.Substring(0, 137) + "..." : Model.ShortDescription;
    ViewBag.URL = url;
    ViewBag.MetaImg = $"https://goodjoker.ru/Content/style/images/Lotteries/Normal/{Model.Cover}";
    ViewBag.KeyWords = "бесплатный розыгрыш";

    var keywords = Model.Title.Replace(",", "").Split(' ');
    foreach (var key in keywords)
    { ViewBag.KeyWords += $", {key}"; }

    var i = 0;
    var part = "";
    var titlePart = "";
    var goPlay = true;
    var beginLott = (Model.DateLottery > DateTime.MaxValue && Model.CountUserForLottery <= Model.Users.Count) ? true : false;
    var defaultStr = $"Розыгрыш вот-вот начнётся, ожидаем студию {Model.Studio.Name}...";
    User user = ViewBag.user;
    DateTime dateLott = Model.DateLottery;

    bool editLott = false,
         member = false,
         commentStudio = false;
    if (user != null)
    {
        if (User.Identity.GetUserRole() == "Admin")
        {
            member = true;
            editLott = true;
        }
        else
        {
            var roles = user.Studios?.FirstOrDefault(s => s.Studio.Id == Model.Studio.Id)?.Role;
            if (roles != null && roles.FirstOrDefault(r => r.Name != "Sub") != null)
            { member = true; }
            if (roles != null && roles.FirstOrDefault(r => r.Name == "Creator" || r.Name == "Admin" || r.Name == "CreateLottery") != null)
            { editLott = true; }
            if (roles != null && roles.FirstOrDefault(r => r.Name == "Admin" || r.Name == "CommentStudio") != null)
            { commentStudio = true; }
        }
    }

    var commentCount = ViewBag.allComments.Count;
    var winnerCount = Model.Prizes.Where(p => (p.Winner != null || p.NoWin) && p.Confirm).Count();
    var id = User.Identity.GetUserId<int>();
    var up = (Model.Fingers.FirstOrDefault(f => f.User.Id == id && f.UpOrDown) == null) ? "icon-thumbs-o-up" : "icon-thumbs-up-1";
    var down = (Model.Fingers.FirstOrDefault(f => f.User.Id == id && !f.UpOrDown) == null) ? "icon-thumbs-o-down" : "icon-thumbs-down-1";

    if (user != null)
    {
        // Проверяем возраст
        if ((Model.BeginAgeLimit > 0 || Model.EndAgeLimit > 0) && user != null && user.Option.Birthday.Hour == 14)
        {
            TimeSpan span = DateTime.UtcNow.Subtract(user.Option.Birthday);
            var age = (int)span.TotalDays / 360;
            if ((Model.BeginAgeLimit > 0) && (age < Model.BeginAgeLimit))
            {
                goPlay = false;
                titlePart = "Вы должны быть старше, чтобы учавствовать в этом розыгрыше!";
            }
            else if ((Model.EndAgeLimit > 0) && (age > Model.EndAgeLimit))
            {
                goPlay = false;
                titlePart = "Вы должны быть моложе, чтобы учавствовать в этом розыгрыше!";
            }
        }

        // Проверям нахождение пользователя в нужном регионе
        if ((Model.Cities.Count > 0 || Model.Regions.Count > 0) && (user.Option.CityID > 1 || user.Option.BigCityID > 1))
        {
            var exist = false;

            if (Model.Cities.Count > 0 && Model.Cities.FirstOrDefault(c => c.Id == user.Option.CityID || c.Id == user.Option.BigCityID) != null)
            { exist = true; }

            if (Model.Regions.Count > 0 && Model.Regions.FirstOrDefault(r => r.Id == user.Option.City.Region.Id || r.Id == user.Option.BigCity.Region.Id) != null)
            { exist = true; }

            if (!exist)
            {
                goPlay = false;
                titlePart = "Этот розыгрыш проходит не в Вашем регионе!";
            }
        }

        // Проверяем пол
        if (Model.GenderLimit > 0 && user.Option.Gender > 0 && user.Option.Gender != Model.GenderLimit)
        {
            goPlay = false;
            titlePart = "Этот розыгрыш, создан для противоположного пола!";
        }
    }

    if (User.Identity.IsAuthenticated && !member && goPlay)
    {
        part = (Model.Users.FirstOrDefault(u => u.Id == User.Identity.GetUserId<int>()) == null) ? "icon-plus-1" : "icon-check-1";
        part = (part == "icon-plus-1" && beginLott) ? "icon-cancel" : part;
    }
    else
    {
        part = "icon-cancel";
        if (!User.Identity.IsAuthenticated) { titlePart = "Для участия в розыгрыше Вам необходимо авторизироваться!"; }
        else if (member) { titlePart = "Вы состоите в студии, которая организовала этот розыгрыш!"; }
    }

    defaultStr = titlePart;
}

@section Add {
    <div class="youtubeVideo">
        @if (editLott)
        {
            <div class="editYoutube">
                <h1>Изменение youtube видео</h1>
                <div class="info">
                    Скопируйте ссылку нужного Вам YouTube Видео...<br />
                    Например: <u>https://www.youtube.com/watch?v=nKFDp9Y52-o</u> или <u>https://youtu.be/nKFDp9Y52-o</u>
                </div>
                <div class="inputAddMember">
                    <input class="input" name="YoutubeId" type="text" value="https://youtu.be/@Model.YoutubeId" required /><span class="lineInput"></span>
                    <label class="inputLable">Ссылка</label>
                </div>
                @if (Model.YoutubeId != null && Model.YoutubeId != "")
                { <iframe src="https://www.youtube.com/embed/@Model.YoutubeId?rel=0&amp;controls=0&amp;showinfo=0\" frameborder="0" allowfullscreen></iframe> }
                else
                { <div class="default">Видео не добавленно</div> }
            </div>
        }
    </div>
}

@section Modal {
    <div class="modalWindow modalComplaint">
        <h2>Жалоба</h2>
        <span>
            Благодарим Вас за желание помочь нам отслеживать нарушителей правил сайта.
            Для заявки просим Вас описать нам, что именно Вас возмутило в том, на что Вы жалуетесь.
            Если вы хотите быть в курсе нашей работы по вашей жалобе, тогда активируйте переключатель "Получить ответ".
        </span>
        <form class="formComplaint">
            <input name="IdLottery" type="hidden" value="@Model.Id" />
            <input name="IdComment" type="hidden" value="0" />
            <textarea name="Text" placeholder="Опишите нарушение или ошибки, которые Вы заметили..."></textarea>
            <div class="inputBlock">
                <input id="Reply" type="checkbox" name="Reply" value="true" /> <label for="Reply">Получить ответ</label>
            </div>
        </form>
        <button class="btn sendComplaint">Отправить</button>
        <div class="modalClose"><i class="icon-cancel"></i></div>
    </div>
}

<div class="container bodyDraw">
    <div class="drawControlLine">

        <div class="moveLine">

            <div class="itemLine">
                <i class="icon-eye"></i><br />
                <span>@Model.View</span>
            </div>

            <div class="itemLine">
                <i class="icon-users"></i><br />
                <span id="countUser">@Model.Users.Count</span>
            </div>

            @if (User.Identity.IsAuthenticated)
            {
                <div class="itemLine">
                    <i class="icon-bug complaint"></i>
                </div>
            }

            <div class="itemLine">
                <i class="@part @if (!beginLott && goPlay) {<text>add</text>}" title="@titlePart"></i>
            </div>
            
            <div class="itemLine">
                <i class="@up finger @if (User.Identity.IsAuthenticated) {<text>up</text>}"></i><br />
                <span id="oddsFingers">@Model.OddsFingers</span><br />
                <i class="@down finger @if (User.Identity.IsAuthenticated) {<text>down</text>}"></i>
            </div>

        </div>

    </div>
    <div class="drawContent">
        <div class="drawPreview" style="background-image: url('../../Content/style/images/Lotteries/Normal/@Model.Cover')">
            <div class="drawTitle">
                @if (editLott)
                {
                    <form id="coverForm" enctype="multipart/form-data">
                        <input type="hidden" name="Id" value="@Model.Id" />
                        <input type="file" name="Cover" id="cover" class="hidden" accept="image/png,image/jpeg" />
                    </form>
                    <label class="addBG" for="cover"><i class="icon-download"></i></label>
                }
                <div class="nameLott">@Model.Title</div>
                @if (Model.YoutubeId != null || editLott) {<i class="icon-youtube-play play"></i>}
            </div>
        </div>
        @HelperAdvert.ViewAdvert(null)
        <div class="drawDescription">
            <div id="addParticipant" class="addParticipant">
                <p>Чтобы принять участие в розыгрыше, Вам нужно оставить некоторую информацию о себе. Она нужна организаторам розыгрыша, для проверки выполнения Вами условий, которые они установили.</p>

                @if (Model.MandatoryInfo.Where(m => m.Type != "info").Count() > 0 ||
                    Model.BeginAgeLimit != 0 || Model.EndAgeLimit != 0 ||
                    Model.GenderLimit != 0 || Model.Cities.Count > 0)
                {
                    <p>
                        Информация, которую предоставляет GoodJoker.
                        Ваше участие в этом розыгрыше означает согласие на разглашение организаторам розыгрыша нижеперечисленной информации.
                        При отсутвии этой информации (подсвеченно красным цветом), Вы не сможете принять участие в этом розыгрыше.
                        Дополнить или изменить информацию можно в <a href="/PrivateOffice/Settings">настройках личного кабинета</a>.
                    </p>
                    <div class="errorTextGJ"></div>
                    <div class="iconInfoLottery">
                        @if (Model.MandatoryInfo.Where(m => m.Type != "info").Count() > 0)
                        {
                            foreach (var info in Model.MandatoryInfo.Where(m => m.Type != "info"))
                            {
                                var icon = "icon-";
                                var title = "";
                                var error = false;
                                switch (info.Type)
                                {
                                    case "vkontakte":
                                        icon += "vk";
                                        title = "Ссылка на Вашу страницу ВКонтакте";
                                        if (user?.SocialNetworks.FirstOrDefault(s => s.Name == "VK") == null)
                                        { error = true; }
                                        break;
                                    case "facebook":
                                        icon += "facebook";
                                        title = "Ссылка на Вашу страницу Facebook";
                                        if (user?.SocialNetworks.FirstOrDefault(s => s.Name == "FB") == null)
                                        { error = true; }
                                        break;
                                    case "odnoklassniki":
                                        icon += "odnoklassniki";
                                        title = "Ссылка на Вашу страницу Odnoklassniki";
                                        if (user?.SocialNetworks.FirstOrDefault(s => s.Name == "OK") == null)
                                        { error = true; }
                                        break;
                                    case "google":
                                        icon += "google";
                                        title = "Ссылка на Вашу страницу Google+";
                                        if (user?.SocialNetworks.FirstOrDefault(s => s.Name == "GL") == null)
                                        { error = true; }
                                        break;
                                    case "email":
                                        icon += "mail-1";
                                        if (user?.Email == null || user?.Email == "")
                                        {
                                            error = true;
                                            title = "Адрес электронной почты";
                                        }
                                        else
                                        {
                                            title = user?.Email;
                                        }
                                        break;
                                    case "phone":
                                        icon += "mobile";
                                        if (user?.Option.Phone == null || user?.Option.Phone == "")
                                        {
                                            error = true;
                                            title = "Телефонный номер";
                                        }
                                        else
                                        {
                                            title = user?.Option.Phone;
                                        }
                                        break;
                                    case "name":
                                        icon += "user";
                                        if (user?.Option.FirstName == null || user?.Option.FirstName == "" ||
                                            user?.Option.MiddleName == null || user?.Option.MiddleName == "" ||
                                            user?.Option.LastName == null || user?.Option.LastName == "")
                                        {
                                            error = true;
                                            title = "Фамилия Имя Отчество";
                                        }
                                        else
                                        {
                                            title = user?.Option.FirstName + " " + user?.Option.MiddleName + " " + user?.Option.LastName;
                                        }
                                        break;
                                    case "address":
                                        icon += "pin";
                                        if (user?.Option.ExactAddress == null || user?.Option.ExactAddress == "")
                                        {
                                            error = true;
                                            title = "Точный адресс";
                                        }
                                        else
                                        {
                                            title = user?.Option.ExactAddress;
                                        }
                                        break;
                                    default:
                                        break;
                                }
                                <a class="@if (error) {<text>error</text>}" href="/PrivateOffice/Settings"><i class="@icon" title="@title"></i></a>
                            }
                        }

                        @if ((Model.BeginAgeLimit > 0 || Model.EndAgeLimit > 0) && user != null)
                        { <a @if (user.Option.Birthday.Hour != 14) {<text>class="error"</text>} href="/PrivateOffice/Settings"><i class="icon-calendar" title="Дата рождения"></i></a> }

                        @if (Model.GenderLimit > 0 && user != null)
                        { <a @if (user.Option.Gender == 0) {<text>class="error"</text>} href="/PrivateOffice/Settings"><i class="icon-venus-mars" title="Половая принадлежность"></i></a> }

                        @if ((Model.Cities.Count > 0 || Model.Regions.Count > 0) && user != null)
                        { <a @if (user.Option.CityID == 1 && user.Option.BigCityID == 1) {<text>class="error"</text>} href="/PrivateOffice/Settings"><i class="icon-building-o" title="Населённый пункт или город"></i></a> }
                    </div>
                }
                @if (Model.MandatoryInfo.Where(m => m.Type == "info").Count() > 0)
                {
                    <p>Информация, которую запрашивает организатор розыгрыша.</p>
                    <div class="errorTextCustom"></div>
                    i = 0;
                    <form id="formAddParticipant">
                        @foreach (var info in Model.MandatoryInfo.Where(m => m.Type == "info"))
                        {
                            <div class="authLine">
                                <input type="hidden" name="Info[@i].InfoId" value="@info.Id" />
                                <input class="input" name="Info[@i].Text" type="text" title="@info.Name" required /><span class="lineInput"></span>
                                <label class="inputLable">@info.Name</label>
                            </div>
                            ++i;
                        }
                    </form>
                }
                <div class="cancel"><i class="icon-cancel"></i></div>
                <div class="participate"><i class="icon-check-1"></i></div>
            </div>

            <div class="title">
                <h1><span>Студия</span></h1>
                <div class="studioInfo">
                    <i class="icon-chart-area" title="Рейтинг"></i> @Model.Studio.Option.Statistics &nbsp;
                    <i class="icon-empire" title="Количество розыгрышей"></i> @Model.Studio.Lotteries.Count &nbsp;
                    <i class="icon-users" title="количество участников"></i> @Model.Studio.Team.Where(t=> t.ConfirmMember && t.Role.FirstOrDefault(r => r.Name == "Sub") == null).Count() &nbsp;
                    <i class="icon-news" title="количество подписчиков"></i> @Model.Studio.Team.Where(t => t.Role.FirstOrDefault(r => r.Name == "Sub") != null).Count()
                </div>
            </div>
            <div class="studioName"><a href="/Main/Studio/@Model.Studio.Id">@Model.Studio.Name</a></div>

            @if (Model.CountUserForLottery == 0 || User.Identity.GetUserRole() == "Admin")
            {
                <div class="title"><h1><span>Дата розыгрыша</span></h1>@if(User.Identity.GetUserRole() == "Admin"){<div class="editInTitle"><i class="icon-pencil-1 editDateBtn"></i></div>}</div>
                <div class="clock">
                    <div id="Date"></div>
                </div>
            }
            
            @if (Model.CountUserForLottery > 0 || User.Identity.GetUserRole() == "Admin")
            {
                <div class="title"><h1><span>Количество пользователей</span></h1>@if (User.Identity.GetUserRole() == "Admin"){<div class="editInTitle"><i class="icon-pencil-1 editCountUserBtn"></i></div>}</div>
                <div id="CountUser" class="drawNeedUser"><i class="icon-users"></i> @Model.CountUserForLottery.ToString("###,###,###,##0")</div>
            }

            <div id="shortDescription">
                @if (editLott)
                { <span style="display: none;" class="maxChar">300</span> }
                <div class="title"><h1><span>Короткое описание</span></h1>@if(editLott){<div class="editInTitle"><i class="icon-pencil-1 editShortDesc"></i></div>}</div>
                <div class="drawText">@Model.ShortDescription</div>
            </div>

            <div id="description">
                <div class="title"><h1><span>Описание</span></h1>@if (editLott){<div class="editInTitle"><i class="icon-pencil-1 editDesc"></i></div>}</div>
                <div class="drawText">@Model.Text</div>
            </div>

            @if (Model.Conditions != null && Model.Conditions != "" ||
                Model.BeginAgeLimit > 0 && Model.EndAgeLimit > 0 ||
                Model.Cities.Count > 0 || Model.GenderLimit > 0)
            {
                string age = "",
                       gender = "",
                       regs = "";

                if (Model.BeginAgeLimit > 0 && Model.EndAgeLimit > 0)
                { age = $"от {Model.BeginAgeLimit} до {Model.EndAgeLimit}"; }
                else if (Model.BeginAgeLimit > 0)
                { age = $"{Model.BeginAgeLimit}+"; }
                else if (Model.EndAgeLimit > 0)
                { age = $"до {Model.EndAgeLimit}"; }

                if (Model.GenderLimit == 1)
                { gender = "мужчины"; }
                else if (Model.GenderLimit == 2)
                { gender = "женщины"; }

                if (Model.Cities.Count > 0)
                {
                    var oldRegion = 0;
                    var firstCity = true;
                    foreach (var city in Model.Cities.OrderBy(c => c.Region.Id))
                    {
                        if (city.Region.Id != oldRegion)
                        {
                            if (oldRegion > 0) { regs += "), "; }
                            regs += city.Region.Name + " (";
                            oldRegion = city.Region.Id;
                            firstCity = true;
                        }

                        regs += (firstCity) ? city.Name : ", " + city.Name;
                        firstCity = false;
                    }
                    regs += ")";
                    
                }

                if (Model.Regions.Count > 0)
                {
                    foreach (var region in Model.Regions)
                    {
                        if (regs != "") { regs += ", "; }
                        regs += region.Name;
                    }
                }

                <div class="title"><h1><span>Условия</span></h1></div>
                <div class="drawConditions">
                    <ol>
                        @if (age != "")
                        { <li>Для участия в розыгрыше Ваш возраст должен быть @age</li> }
                        @if (gender != "")
                        { <li>В розыгрыше могут учавствовать только @gender</li> }
                        @if (Model.Conditions != null && Model.Conditions != "")
                        {
                            foreach (var cond in Model.Conditions.Split(new string[] { "&Conditions;" }, StringSplitOptions.RemoveEmptyEntries))
                            { <li>@cond</li> }
                        }

                        @if (regs != "")
                        { <li>Регионы проведения: @regs</li> }
                    </ol>
                </div>
            }

            @if  (Model.Prizes.Where(p => p.Confirm || p.NoWin).Count() == 0)
            {
                var endPlace = 0;
                <div class="title"><h1><span>Призовые места</span></h1>@if (editLott && dateLott > DateTime.UtcNow){<div class="editInTitle"><i class="icon-pencil-1 editPrize"></i></div>}</div>
                <div class="drawPrizes">
                    <ol>
                        @if (Model.Prizes.Count > 1) // Если призов больше чем 1
                        {
                            // Сортируем по месту
                            var prizes = Model.Prizes.OrderBy(p => p.Place);
                            // Перебираем и выводим
                            foreach (var prize in prizes)
                            {
                                // Если место текущего приза больше, чем у выведенного последнего элемента ренджа
                                if (prize.Place > endPlace)
                                {
                                    // Выводим текущий приз
                                    <li><span>место</span> - @prize.Name</li>

                                    // Проверяем призы на совпадение по имени
                                    var range = prizes.Where(p => p.Name == prize.Name).ToList();
                                    // Если есть, тогда создаем range
                                    if (range.Count > 1)
                                    {
                                        // Последний элемент
                                        var last = range.Last();
                                        // Если место последнего элемента привышает на 2, место текущего приза
                                        if (last.Place > (prize.Place + 1))
                                        {
                                            // Выводим в скрытом блоке все элементы
                                            <div class="morePrize">...</div>
                                            <div class="rangeList">
                                                @for (int j = 0; j < range.Count - 2; j++)
                                                {
                                                    <li></li>
                                                }
                                            </div>
                                        }
                                        // Выводим последний элемент
                                        <li><span>место</span> - @last.Name</li>
                                        // Для проверки присваиваем значение переменной последнего места
                                        endPlace = last.Place;
                                    }
                                }
                            }
                        }
                        else // Если приз 1
                        { <li><span>место</span> - @Model.Prizes.First().Name</li> }

                        @if (editLott && dateLott > DateTime.UtcNow)
                        {<li id="addPrize" style="display: none;"><span>место</span> - <input class="inputAddLottery" type="text" name="PrizeName" placeholder="Название приза..." /><input type="hidden" name="PrizePlace" value="@(Model.Prizes.Count + 1)" /></li>}
                    </ol>
                    @if (editLott && dateLott > DateTime.UtcNow)
                    {<div class="addBtn addPrize" style="display: none;">+ Добавить приз</div>}
                </div>
            }

            @if (Model.Link.Count > 0 || editLott)
            {
                i = 0;
                <div class="title"><h1><span>Ссылки</span></h1>@if(editLott){<div class="editInTitle"><i class="icon-pencil-1 editLinksBtn"></i></div>}</div>
                <div class="drawLinks">
                    <div class="nowLinks">
                        @foreach (var link in Model.Link)
                        {
                            var icon = "icon-";

                            switch (link.Type)
                            {
                                case "vkontakte":
                                    icon += "vk";
                                    break;
                                case "facebook":
                                    icon += "facebook";
                                    break;
                                case "twitch":
                                    icon += "twitch";
                                    break;
                                case "twitter":
                                    icon += "twitter";
                                    break;
                                case "youtube":
                                    icon += "youtube";
                                    break;
                                case "odnoklassniki":
                                    icon += "odnoklassniki";
                                    break;
                                case "google":
                                    icon += "google";
                                    break;
                                case "google+":
                                    icon += "google-plus";
                                    break;
                                case "pinterest":
                                    icon += "pinterest-p";
                                    break;
                                case "steam":
                                    icon += "steam";
                                    break;
                                case "github":
                                    icon += "github-alt";
                                    break;
                                default:
                                    icon += "share-square-o";
                                    break;
                            }

                            <div class="itemLink"><a href="@link.Link" target="_blank"><i class="@icon"></i> @link.Name</a></div>
                        }
                    </div>
                    @if (editLott)
                    {
                        <form class="editLinks">
                            <div class="confirmEditLinks"><i class="icon-check-1"></i></div>
                            <div class="addLink">
                                <div title="Вконтакте" onclick="addLink('vkontakte')"><i class="icon-vk"></i></div>
                                <div title="Facebook" onclick="addLink('facebook')"><i class="icon-facebook"></i></div>
                                <div title="YouTube" onclick="addLink('youtube')"><i class="icon-youtube"></i></div>
                                <div title="Twitch" onclick="addLink('twitch')"><i class="icon-twitch"></i></div>
                                <div title="Twitter" onclick="addLink('twitter')"><i class="icon-twitter"></i></div>
                                <div title="Одноклассники" onclick="addLink('odnoklassniki')"><i class="icon-odnoklassniki"></i></div>
                                <div title="Google" onclick="addLink('google')"><i class="icon-google"></i></div>
                                <div title="Google+" onclick="addLink('google+')"><i class="icon-google-plus"></i></div>
                                <div title="Pinterst" onclick="addLink('pinterest')"><i class="icon-pinterest-p"></i></div>
                                <div title="Steam" onclick="addLink('steam')"><i class="icon-steam"></i></div>
                                <div title="Github" onclick="addLink('github')"><i class="icon-github-alt"></i></div>
                                <div title="Ссылка на сторонний ресурс" onclick="addLink('link')"><i class="icon-share-square-o"></i></div>
                            </div>
                            @foreach (var link in Model.Link)
                            {
                                var icon = "icon-";

                                switch (link.Type)
                                {
                                    case "vkontakte":
                                        icon += "vk";
                                        break;
                                    case "facebook":
                                        icon += "facebook";
                                        break;
                                    case "twitch":
                                        icon += "twitch";
                                        break;
                                    case "twitter":
                                        icon += "twitter";
                                        break;
                                    case "youtube":
                                        icon += "youtube";
                                        break;
                                    case "odnoklassniki":
                                        icon += "odnoklassniki";
                                        break;
                                    case "google":
                                        icon += "google";
                                        break;
                                    case "google+":
                                        icon += "google-plus";
                                        break;
                                    case "pinterest":
                                        icon += "pinterest-p";
                                        break;
                                    case "steam":
                                        icon += "steam";
                                        break;
                                    case "github":
                                        icon += "github-alt";
                                        break;
                                    default:
                                        icon += "share-square-o";
                                        break;
                                }

                                <div class="itemLink">
                                    <i class="icon-cancel delLink" link-name="@link.Type" inc="@i"></i>
                                    <i class="@icon"></i>
                                    <input type="hidden" name="Link[@i].Type" value="@link.Type" />
                                    <input class="inputAddLottery nameLink" type="text" name="Link[@i].Name" placeholder="Введите название ссылки..." value="@link.Name" /><br />
                                    <input class="inputAddLottery addressLink" type="text" name="Link[@i].Link" placeholder="Введите адрес ссылки..." value="@link.Link" />
                                </div>
                                ++i;
                            }
                        </form>
                    }
                </div>
            }

            <div class="title"><h1><span>Поделиться с друзьями</span></h1></div>
            <div class="drawRepost">
                <a href="https://vk.com/share.php?url=@url&title=@Model.Title&description=@Model.ShortDescription&image=https://goodjoker.ru/Content/style/images/News/Cover/Reduced/@(Model.Id).jpg" target="_blank"><i class="icon-vk"></i></a>
                <a href="http://www.odnoklassniki.ru/dk?st.cmd=addShare&st.s=1&st.comments=@Model.ShortDescription&st._surl=@url" target="_blank"><i class="icon-odnoklassniki"></i></a>
                <a href="http://www.facebook.com/sharer.php?u=@url&t=@Model.Title" target="_blank"><i class="icon-facebook"></i></a>
                <a href="https://plus.google.com/share?url=@url" target="_blank"><i class="icon-google-plus"></i></a>
                <a href="http://twitter.com/intent/tweet?url=@url&text=@Model.ShortDescription" target="_blank"><i class="icon-twitter"></i></a>
                <a href="http://www.pinterest.com/pin/create/button/?url=@url&media=https://goodjoker.ru/Content/style/images/News/Cover/Reduced/@(Model.Id).jpg" target="_blank"><i class="icon-pinterest-p"></i></a>
            </div>

            <div id="updateWinnerBlock">
                @if (Model.Prizes.Where(p => !p.Confirm).Count() != 0)
                {
                    if (Model.CountUserForLottery == 0 || Model.CountUserForLottery <= Model.Users.Count)
                    {
                        <div class="title"><h1><span>До розыгрыша осталось</span></h1>@if (editLott) {<div class="editInTitle"><i class="icon-cog editOptionBtn"></i></div>}</div>
                        if (editLott)
                        {
                            <div class="editOption">
                                <div class="item">
                                    <input class="optCheck" type="checkbox" name="Auto" @if (Model.Auto) { <text> checked</text>} />
                                    <span>- Автоматически проводить розыгрыш</span>
                                </div>
                                <div class="item">
                                    <input class="optCheck" type="checkbox" name="First" @if (Model.FromTheFirst) { <text> checked</text>}>
                                    <span>- Начинать розыгрыш с первого места</span>
                                </div>
                            </div>
                        }
                        <div class="clock">
                            <ul>
                                <li id="day"> </li>
                                <li class="point">:</li>
                                <li id="hours"> </li>
                                <li class="point">:</li>
                                <li id="min"> </li>
                                <li class="point">:</li>
                                <li id="sec"> </li>
                            </ul>
                        </div>
                    }
                    else
                    {
                        var odds = Model.CountUserForLottery - Model.Users.Count;
                        if (odds < 0) { odds = 0; }
                        var str = odds.ToString("###,###,###,##0");
                        var length = Model.CountUserForLottery.ToString().Length;
                        for (i = odds.ToString().Length; i < length; i++)
                        {
                            if (i % 3 == 0)
                                { str = "," + str; }
                            str = "0" + str;
                        }
                        <div class="title"><h1><span>До розыгрыша осталось</span></h1></div>
                        <div id="oddsCountUser" class="drawNeedUser">@str <i class="icon-users"></i></div>
                    }
                    <div class="drawDefaultHolding" @if (titlePart != "") {<text>style="display: block; color: red;"</text>}>@defaultStr</div>
                    <a class="drawHoldingLink" href="/Lottery/Holding/@Model.Id">
                        @if (editLott)
                        {
                            if (Model.BeginLott) {<text>Продолжить розыгрыш</text>}
                            else {<text>Начать розыгрыш</text>}
                        }
                        else
                        {<text>Перейти к розыгрышу</text>}
                    </a>
                }

                @if (winnerCount > 0)
                {
                    i = 1;
                    <div class="title"><h1><span>Победители</span></h1></div>
                    <div class="drawListWinner">
                        @foreach (var prize in Model.Prizes.Where(p => (p.Winner != null || p.NoWin) && p.Confirm).OrderBy(p => p.Place))
                        {
                            var place = "otherPlace";
                            if (i == 1) { place = "firstPlace"; }
                            if (i == 2) { place = "secondPlace"; }
                            if (i == 3) { place = "thirdPlace"; }

                            <div class="@place">
                                @i.
                                @if (prize.NoWin)
                                { <text>Не разыгран</text>}
                                else
                                {<a href="/Main/Joker/@prize.Winner.Id">@prize.Winner.Nick</a>}
                                - @prize.Name
                                @if (prize.RefreshWinners.Count > 0)
                                {<i class="icon-refresh" title="Победитель был перевыбран"></i>}
                            </div>
                            ++i;
                        }
                    </div>
                }
            </div>

            <div id="formComment" class="title"><h1><span>Комментарии @if (commentCount > 0) {<text>@commentCount</text>}</span></h1></div>
            
            <div class="blockComments lotteryCommentPadding">

                <div class="formComment">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div class="replyName">@if (commentStudio) {<text>@Model.Studio.Name</text>} else {<text>@User.Identity.Name</text>}</div>
                        <input type="hidden" name="CommentId" value="0" />
                        <textarea name="Text" class="textareaComment" placeholder="Напишите комментарий..." rows="3"></textarea>
                        <div class="sendComment" title="Отправка комментария 'Ctrl+Enter'"><i class="icon-email-plane"></i></div>
                    }
                    else
                    {
                        <div class="default">
                            Комментарии могут оставлять только зарегистрированные пользователи.<br />
                            <a href="/Main/Auth">Войдите</a> в аккаунт для того, чтобы прокомментировать этот розыгрыш.
                        </div>
                    }
                </div>

                <div class="beginDashedLine" @if (commentCount == 0) { <text> style="display:none;" </text> }></div>

                <div class="allComment">
                    @if (commentCount > 0)
                    {
                        @Html.Partial("_CommentLottery", Model.Comments)
                        if (ViewBag.last == '0') { <div class="ajaxComment">ЕЩЁ</div> }
                    }
                    else
                    { <div class="defaultCommentLottery">Комментарии отсутсвуют, будьте первым!</div> }
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    <script src="~/Scripts/jquery.mask.min.js"></script>
    <script>
        youtubeId = "@Model.YoutubeId";
        lotteryId = "@Model.Id";
        var iLink = @Model.Link.Count,
            countUserForLottery = @Model.CountUserForLottery,
            organizer = @if (editLott) {<text>true</text>} else {<text>false</text>},
            name = "@if (commentStudio) {<text>@Model.Studio.Name</text>} else {<text>@User.Identity.Name</text>}";

        var allComments = @commentCount,
            viewCount = @Model.Comments.Count,
            HMSC = viewCount;

        // локальная дата
        var dateNow = new Date();
        // получаем разницу часовых поясов
        var GMT = dateNow.getHours() - dateNow.getUTCHours();

        $(document).ready(function () {

            $(".modalClose").click(function () {
                closeModal();
            });

            $(".modalBody").click(function (e) {
                if (e.target === this) {
                    closeModal();
                }
            });

            $(".like").click(function () {
                if ($(this).hasClass("icon-heart-o")) {
                    $(".like").removeClass("icon-heart-o").addClass("icon-heart");
                    $("#countLike").text(parseInt($("#countLike").text()) + 1);
                } else {
                    $(".like").removeClass("icon-heart").addClass("icon-heart-o");
                    $("#countLike").text(parseInt($("#countLike").text()) - 1);
                }
                if (lotteryId > 0) {
                    $.ajax({
                        url: "/Lottery/LikeLottery",
                        type: "POST",
                        data: {
                            LotteryId: lotteryId
                        }
                    });
                }
            });

            $(".up").click(function () {

                var odds = parseInt($("#oddsFingers").text()),
                    active = "icon-thumbs-up-1",
                    noActive = "icon-thumbs-o-up",
                    up = $(this),
                    down = $(".down");

                if (!up.hasClass("disable")) {
                    up.addClass("disable");
                    down.addClass("disable");

                    if (up.hasClass("icon-thumbs-o-up")) {
                        ++odds;
                        if (down.hasClass("icon-thumbs-down-1")) {
                            down.removeClass("icon-thumbs-down-1").addClass("icon-thumbs-o-down");
                            ++odds;
                        }
                        up.removeClass(noActive).addClass(active);
                        $("#oddsFingers").text(odds);
                    } else {
                        --odds;
                        up.removeClass(active).addClass(noActive);
                        $("#oddsFingers").text(odds);
                    }

                    $.ajax({
                        url: "/Lottery/FingerLottery",
                        type: "POST",
                        data: {
                            LotteryId: lotteryId,
                            UpOrDown: true
                        },
                        success: function () {
                            up.removeClass("disable");
                            down.removeClass("disable");
                        }
                    });
                }


            });

            $(".down").click(function () {
                var odds = parseInt($("#oddsFingers").text()),
                    active = "icon-thumbs-down-1",
                    noActive = "icon-thumbs-o-down",
                    up = $('.up'),
                    down = $(this);

                if (!up.hasClass("disable")) {
                    up.addClass("disable");
                    down.addClass("disable");

                    if (down.hasClass("icon-thumbs-o-down")) {
                        --odds;
                        if (up.hasClass("icon-thumbs-up-1")) {
                            up.removeClass("icon-thumbs-up-1").addClass("icon-thumbs-o-up");
                            --odds;
                        }
                        down.removeClass(noActive).addClass(active);
                        $("#oddsFingers").text(odds);
                    } else {
                        ++odds;
                        down.removeClass(active).addClass(noActive);
                        $("#oddsFingers").text(odds);
                    }

                    $.ajax({
                        url: "/Lottery/FingerLottery",
                        type: "POST",
                        data: {
                            LotteryId: lotteryId,
                            UpOrDown: false
                        },
                        success: function () {
                            down.removeClass("disable");
                            up.removeClass("disable");
                        }
                    });
                }
            });

            $(".add").click(function () {
                if ($(this).hasClass("icon-plus-1")) {
                    if ($('.iconInfoLottery a').length > 0 || $(".authLine .input").length > 0) {
                        $(".addParticipant").slideDown(400);
                        $("html, body").animate({ scrollTop: $("#addParticipant").offset().top }, 1100);
                    } else {
                        $(".addParticipant .participate").click();
                    }
                } else if ($(this).hasClass("icon-check-1")) {
                    if (confirm("Вы уверны, что хотите отказаться от участия в розыгрыше?")) {
                        $.ajax({
                            url: "/Lottery/DelParticipate",
                            type: 'POST',
                            data: {
                                LotteryId: lotteryId
                            },
                            success: function () {
                                $(".add").removeClass("icon-check-1").addClass("icon-plus-1");
                                $("#countUser").text(parseInt($("#countUser").text()) - 1);
                            },
                            error: function () {
                                globalError();
                            }
                        });
                    }
                } else {
                    alert("Для участия в розыгрыше, авторизируйтесь на сайте!");
                }
            });

            $(".complaint").click(function () {
                $(".modalBody").css("display", "flex");
                $(".modalComplaint").css("display", "block").addClass("fadeInDown");
            });

            $(".complaintComment").click(function () {
                $(".modalBody").css("display", "flex");
                $(".modalComplaint").css("display", "block").addClass("fadeInDown");
                $(".formComplaint input[name='IdComment']").val($(this).parent().attr("commentid"));
            });

            $(".sendComplaint").click(function () {
                var data = $(".formComplaint").serialize();
                $.ajax({
                    url: "/Main/Complaint",
                    type: "POST",
                    data: data
                });
                $(".formComplaint input[name='IdComment']").val(0);
                $(".formComplaint textarea[name='Text']").val("");
                closeModal();
            });
            @if (editLott)
            {
                <text>
                    // Изменение названия розыгрыша
                    $(".nameLott").click(function () {
                        if ($(this).children("input").length == 0) {
                            var val = $(this).text();
                            $(this).html(`<input class="inputAddLottery titleLottery" placeholder="Введите название" />`);
                            $(".titleLottery").focus().val(val);
                        }
                    });

                    $("body").on("focusout", ".titleLottery", function () {
                        var val = $(this).val();
                        if (val != "") {
                            $(this).parent().html(val);
                            $.ajax({
                                url: "/Lottery/EditLottery",
                                type: "POST",
                                data: {
                                    Id: lotteryId,
                                    Title: val
                                },
                                error: function () {
                                    globalError();
                                }
                            });
                        }
                    });
                </text>
            }

            $("i.play").click(function () {
                $(".youtubeVideo").fadeIn(300);
                $(".youtubeVideo").css("display", "flex");
                @if (!editLott)
                    {<text>$(".youtubeVideo").html("<iframe src=\"https://www.youtube.com/embed/" + youtubeId + "?rel=0&amp;autoplay=1&amp;controls=0&amp;showinfo=0\" frameborder=\"0\" iflowfullscreen></iframe>");</text>}
            });

            $(".youtubeVideo").click(function (e) {
                if (e.target === this) {
                    $(this).fadeOut(300);
                    @if (!editLott)
                        {<text>$(this).html("");</text>}
                }
            });

            $("input[name='YoutubeId']").change(function () {
                var val = $(this).val();
                $.ajax({
                    url: "/Lottery/EditLottery",
                    type: "POST",
                    data: {
                        Id: lotteryId,
                        YoutubeId: val
                    },
                    success: function () {

                        if (val != "" && val != null) {
                            var link = "",
                                charDel = "";

                            if (YTid.IndexOf("https://") > -1)
                                YTid = YTid.replace("https://", "");

                            if (val.indexOf("www.youtube.com/watch?v=") > -1) {
                                link = "www.youtube.com/watch?v=";
                                charDel = "&";
                            }
                            else if (val.indexOf("youtu.be/") > -1) {
                                link = "youtu.be/";
                                charDel = "?";
                            }
                            else {
                                val = "";
                            }

                            if (val != "") {
                                val = val.replace(link, "");
                                var inx = val.indexOf(charDel);
                                if (inx > -1) {
                                    val = val.substring(0, inx);
                                }
                            }
                        }
                        youtubeId = val;
                        if (val != "") {
                            if ($(".editYoutube .default").length > 0) {
                                $(".editYoutube .default").remove();
                                $(".editYoutube").append(`<iframe src="https://www.youtube.com/embed/${youtubeId}?rel=0&amp;autoplay=1&amp;controls=0&amp;showinfo=0\" frameborder=\"0\" allowfullscreen></iframe>`)
                            } else {
                                $(".editYoutube iframe").attr("src", `https://www.youtube.com/embed/${youtubeId}?rel=0&amp;autoplay=1&amp;controls=0&amp;showinfo=0\\`);
                            }
                        } else {
                            $(".editYoutube iframe").remove();
                            $(".editYoutube").append('<div class="default">Видео не добавленно</div>');
                        }

                    }
                });
            });

            // Создаем две переменные с названиями месяцев и названиями дней.
            var monthNames = ["Января", "Февраля", "Марта", "Апреля", "Мая", "Июня", "Июля", "Августа", "Сентября", "Октября", "Ноября", "Декабря"];
            var dayNames = ["Воскресенье", "Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота"]

            // Создаем объект newDate()
            // new Date(year, month[, day[, hour[, minute[, second[, millisecond]]]]]);
            var dateLottery = new Date(@dateLott.Year, @(dateLott.Month - 1), @dateLott.Day, @dateLott.Hour, @dateLott.Minute, 0);
            // текущая дата по гринвичу
            var nowUTC = new Date(@DateTime.UtcNow.Year, @(DateTime.UtcNow.Month - 1), @DateTime.UtcNow.Day, @DateTime.UtcNow.Hour, @DateTime.UtcNow.Minute, @DateTime.UtcNow.Second);
            // разница дат в гринвиче
            var dateOdds = dateLottery.getTime() - nowUTC.getTime();

            // "Достаем" текущую дату из объекта Date
            dateLottery.setDate(dateLottery.getDate());
            // прибавляем к часам разницу...
            var hour = dateLottery.getHours() + GMT;
            var min = dateLottery.getMinutes();

            if (hour > 23) { hour = hour - 24; }
            else if (hour < 0) { hour = 24 + hour; }
            hour = (hour < 10) ? "0" + hour : hour;
            min = (min < 10) ? "0" + min : min;

            // Получаем день недели, число месяц (в словесном представление) год час:минуту
            $('#Date').html(dayNames[dateLottery.getDay()] + ", " +
                dateLottery.getDate() + ' ' +
                monthNames[dateLottery.getMonth()] + ' ' +
                dateLottery.getFullYear() + ' ' +
                hour + ':' + min);

            if (countUserForLottery == 0 || countUserForLottery <= parseInt($("#countUser").text())) {
                var dateLotteryInterval = setInterval(function () {

                    // Текущая дата
                    dateNow = new Date();
                    dateNow.setHours(dateNow.getUTCHours());
                    // Разница даты текущей и даты проведения
                    dateOdds = dateLottery.getTime() - dateNow.getTime();

                    if (dateOdds > 0) {
                        // Вычисляем количество каждой еденицы
                        var day = dateOdds / (24 * 3600 * 1000) | 0;
                        var hours = (dateOdds % (24 * 3600 * 1000)) / (3600 * 1000) | 0;
                        var minutes = ((dateOdds % (24 * 3600 * 1000)) % (3600 * 1000)) / (60 * 1000) | 0;
                        var seconds = (((dateOdds % (24 * 3600 * 1000)) % (3600 * 1000)) % (60 * 1000)) / 1000 | 0;

                        // Добавляем ноль в начало цифры, которые до 10
                        $("#sec").html((seconds < 10 ? "0" : "") + seconds);
                        $("#min").html((minutes < 10 ? "0" : "") + minutes);
                        $("#hours").html((hours < 10 ? "0" : "") + hours);
                        $("#day").html((day < 10 ? "0" : "") + day);
                    } else {
                        // Выставляем везде 00
                        $("#sec").html("00");
                        $("#min").html("00");
                        $("#hours").html("00");
                        $("#day").html("00");

                        @if (!editLott)
                        {<text>$(".drawDefaultHolding").fadeIn(0);</text>}
                        else
                        {<text>$(".drawHoldingLink").css("display", "block");</text>}

                        clearInterval(dateLotteryInterval);

                        @if (!editLott)
                        {
                            <text>
                                // Проверяем начало розыгрыша
                                var checkBeginLott = setInterval(function () {
                                    $.ajax({
                                        url: "/Lottery/CheckBeginLott",
                                        type: "POST",
                                        data: {
                                            LotteryId: lotteryId
                                        },
                                        success: function (data) {
                                            if (data == "1") {
                                                $(".drawDefaultHolding").fadeOut(0);
                                                $(".drawHoldingLink").css("display", "block");
                                            } else if (data != "0") {
                                                $("#updateWinnerBlock").html(data);
                                            }
                                        }
                                    });
                                }, 5000);
                            </text>
                        }
                    }

                }, 1000);
            }

            $(".addParticipant .cancel").click(function () {
                $(".addParticipant").slideUp(400);
            });

            // Добавление участника розыгрыша
            $(".addParticipant .participate").click(function () {

                if ($('.iconInfoLottery a.error').length == 0) {

                    var error = false;
                    var form = `LotteryId=${lotteryId}`;

                    if ($("form").is("#formAddParticipant")) {
                        form += '&' + $("#formAddParticipant").serialize();
                        for (var i = 0; i < $(".authLine .input").length; i++) {
                            if ($(`input[name='Info[${i}].Text']`).val() == "") {
                                error = true;
                                break;
                            }
                        }
                    }

                    if (!error) {
                        $.ajax({
                            url: "/Lottery/AddParticipate",
                            type: "POST",
                            data: form,
                            success: function (data) {
                                if (data == "1") {
                                    $(".add").removeClass("icon-plus-1").addClass("icon-check-1");
                                    var count = parseInt($("#countUser").text()) + 1;
                                    $("#countUser").text(count);
                                    if (countUserForLottery > 0) {
                                        var odds = countUserForLottery - count;
                                        $(".oddsCountUser").html(`${odds} <i class="icon-users"></i>`);
                                        if (odds == 0) {
                                            location.reload();
                                        }
                                    }

                                    $(".addParticipant").slideUp(400);
                                } else if (data == "2") {
                                    $(".errorTextGJ").text("Все поля обязательны для заполнения!");
                                } else if (data == "3") {
                                    $(".errorTextCustom").text("Все поля обязательны для заполнения!");
                                } else if (data == "4") {
                                    alert("Ваш возраст не соответствует условиям розыгрыша!");
                                } else if (data == "5") {
                                    alert("Ваш регион не соответствует условиям розыгрыша!");
                                } else if (data == "6") {
                                    alert("Ваша половая принадлежность не соответствует условиям розыгрыша!");
                                } else {
                                    globalError();
                                    console.log("Где ID ск...");
                                }
                            },
                            error: function () {
                                globalError();
                            }
                        });
                    } else {
                        $(".errorTextCustom").text("Все поля обязательны для заполнения.");
                    }

                } else {
                    $(".errorTextGJ").text("Все поля обязательны для заполнения.");
                }

            });

            // Отмена ответа
            $(".formComment .replyName").click(function () {
                $(this).text(name);
                $("input[name='CommentId']").val(0);
            });

            // Увеличение textarea
            var startHeight = 101;
            $('.textareaComment').keydown(function (e) {
                var hText = $(this).innerHeight(),
                    sText = this.scrollHeight;
                if (hText != sText) {
                    $(this).innerHeight(sText);
                }
                if ($(this).val().length < 150 && hText != startHeight) {
                    $(this).innerHeight(startHeight);
                }
            });

            // Отправка комментария
            $('.textareaComment').keypress(function (e) {
                if (e.keyCode == 10) {
                    $(".sendComment").click();
                }
            });

            // Отправка комментария
            $(".sendComment").click(function () {
                var id = $(".formComment input[name='CommentId']").val(),
                    text = $(".formComment .textareaComment").val();

                $(".formComment .replyName").text(name);
                $(".formComment input[name='CommentId']").val("0");
                $(".formComment .textareaComment").val("");
                $(".formComment .textareaComment").innerHeight(101);

                if (text.length > 0) {
                    $.ajax({
                        url: "/Lottery/AddComment",
                        type: "POST",
                        data: {
                            LotteryId: lotteryId,
                            CommentId: id,
                            Text: text
                        },
                        success: function (data) {
                            if (data != "0") {
                                $(".beginDashedLine").fadeIn(0);
                                $(".defaultCommentLottery").remove();
                                $(".allComment").prepend(data);
                                $("#formComment h1 span").text("Комментарии " + $(".comment").length);
                            } else {
                                globalError();
                            }
                        },
                        error: function () {
                            console.log("Ошибка епт...");
                        }
                    });
                } else {
                    alert("Пожалуйста введите комментарий");
                }

            });

            $("body").on("click", ".ajaxComment", function () {
                var ajaxBtn = $(this);
                if (allComments > viewCount && !ajaxBtn.hasClass("disable")) {
                    ajaxBtn.addClass("disable");
                    $.ajax({
                        url: "/Lottery/_CommentLottery",
                        type: "POST",
                        data: {
                            LotteryId: lotteryId,
                            ViewCount: viewCount
                        },
                        success: function (data) {
                            if (data != "0") {
                                var ajax = $(".ajaxComment").detach();
                                $(".allComment").append(data);
                                viewCount += HMSC;
                                if (allComments > viewCount) {
                                    $(".allComment").append(ajax);
                                }
                                ajaxBtn.removeClass("disable");
                            }
                        }
                    });
                }
            });

            // Ответ на комментарий
            $("body").on("click", ".addReply", function () {
                $("html, body").animate({ scrollTop: $(".formComment .replyName").offset().top }, 500);
                $(".formComment .replyName").text("Ответить " + $(this).attr("authorNick") + ",");
                $(".formComment input").val($(this).parent().attr("commentId"));
            });

            @if (User.Identity.GetUserRole() == "Admin")
            {
                <text>
                    // Изменение комментария
                    $("body").on("click", ".editComment", function () {
                        var text = $(this).parent().siblings(".text");
                        var id = $(this).parent().attr("commentId");
                        var replyName = text.children('span').text();
                        text.children('span').remove();
                        text.html(`<textarea name="EditComment" replyName="${replyName}" commentId="${id}" placeholder="Введите измененный текст комментария..." style="height: ${text.height() + 100}px;">${text.text()}</textarea>`)
                    });

                    $("body").on("change", "textarea[name='EditComment']", function () {
                        var id = $(this).attr("commentId");
                        var val = $(this).val();
                        var replyName = $(this).attr("replyName");
                        if (replyName != "") {
                            val = `<span>${replyName}</span> <br /> ${val}`;
                        }
                        $.ajax({
                            url: "/Lottery/EditComment",
                            type: "POST",
                            data: {
                                CommentId: id,
                                Text: val
                            },
                            success: function (data) {
                                if (data == "0") {
                                    alert("Рамс с ID или вы не ввели новое значение комментария!");
                                }
                            },
                            error: function () {
                                globalError();
                            }
                        });
                        $(this).parent().html(val);
                    });

                    $("body").on("focusout", "textarea[name='EditComment']", function () {
                        var val = $(this).val();
                        var replyName = $(this).attr("replyName");
                        if (replyName != "") {
                            val = `<span>${replyName}</span> <br /> ${val}`;
                        }
                        $(this).parent().html(val);
                    });

                    // Удаление комментария
                    $("body").on("click", ".delComment", function () {
                        var id = $(this).parent().attr("commentId");
                        $.ajax({
                            url: "/Lottery/DelComment",
                            type: "POST",
                            data: {
                                CommentId: id
                            },
                            success: function (data) {
                                if (data != "0") {
                                    if (data.indexOf(";")) {
                                        var arr = data.split(";");
                                    } else {
                                        var arr = [data];
                                    }

                                    arr.forEach(function callback(val, index, array) {
                                        var comment = $("#comment-" + val);
                                        if (comment.hasClass("last")) {
                                            comment.remove();
                                            if ($(".comment").length > 0) {
                                                $(".comment").last().addClass("last");
                                            } else {
                                                $(".beginDashedLine").fadeOut(0);
                                                $(".allComment").html(`<div class="defaultCommentLottery">Комментарии отсутсвуют, будьте первым!</div>`);
                                            }
                                        } else {
                                            comment.remove();
                                        }
                                        --viewCount;
                                    });
                                }
                            }
                        });
                    });
                </text>
            }

            $(window).on('scroll', function () {

                var scrollWin = $(window).scrollTop();
                var topHeight = $(".drawControlLine").offset().top;
                var height = $(".drawControlLine").height() - $(".moveLine").height();
                var adds = scrollWin - topHeight;

                if (scrollWin > topHeight && height > adds) {
                    $(".moveLine").css("top", adds);
                } else {
                    if (scrollWin < topHeight) {
                        $(".moveLine").css("top", 0);
                    } else {
                        $(".moveLine").css("top", height);
                    }
                }

            });

            // Функции изменения
            // --------------------------------------------------------------

            // Обложка
            $("#cover").on('change', function () {
                var file = $(this)[0].files[0];
                var format = $(this).val().split('.').pop().toLowerCase();
                var cheackFormat = $.inArray(format, ['png', 'jpg', 'jpeg']);

                if (file.size > 10000000) {
                    alert("Загруженое изображение больше 10 Мбайт!");
                    $(this).val("");
                } else if (cheackFormat == -1) {
                    alert("Формат изображения не подходит, для загрузки на сервер! \nПожалуйста загрузите изображение формата: png, jpg, jpeg!");
                    $(this).val("");
                } else {
                    var form = document.forms.coverForm;
                    var formData = new FormData(form);
                    var xhr = new XMLHttpRequest();
                    xhr.open("POST", "/Lottery/EditCover");
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState == 4) {
                            if (xhr.status == 200) {
                                avaName = xhr.responseText;
                                if (avaName != "0") {
                                    $('.drawPreview').css('background-image', `url('../../Content/style/images/Lotteries/Normal/${avaName}')`);
                                } else {
                                    console.log("Отсутствует картинка...");
                                    globalError();
                                }
                                $('#cover').val(null);
                            }
                        }
                    };
                    xhr.send(formData);
                }
            });

            // Дата
            $(".editDateBtn").click(function () {
                @if (User.Identity.GetUserRole() == "Admin") {
                    <text>
                        $("#Date").html("<input class='inputAddLottery dateEdit' type='text' name='Date' placeholder='Введите дату...' value='@Model.DateLottery.ToLocalTime().ToString("dd.MM.yyyy HH:mm")' />");
                        $('#Date .dateEdit').mask('00.00.0000 00:00');
                    </text>
                } else {
                    <text>
                        $("#Date").html("Изменение времени: <input class='inputAddLottery timeEdit' type='text' name='Time' placeholder='00:00' value='@Model.DateLottery.ToLocalTime().ToString("HH:mm")' />");
                        $('#Date .timeEdit').mask('00:00');
                    </text>
                }
            });

            @if (User.Identity.GetUserRole() == "Admin") {
                <text>
                    // Изменение даты
                    $("body").on("focusout", ".dateEdit", function () {
                        var val = $(this).val();
                        $('#Date').html(dayNames[dateLottery.getDay()] + ", " +
                            dateLottery.getDate() + ' ' +
                            monthNames[dateLottery.getMonth()] + ' ' +
                            dateLottery.getFullYear() + ' ' +
                            hour + ':' + min);
                    });

                    $("body").on("change", ".dateEdit", function () {
                        var val = $(this).val();

                        if (val.length == 16) {
                            $.ajax({
                                url: "/Lottery/EditLottery",
                                type: "POST",
                                data: {
                                    Id: lotteryId,
                                    Date: val,
                                    GMT: GMT
                                },
                                success: function () {
                                    location.reload();
                                },
                                error: function () {
                                    globalError();
                                }
                            });
                        }
                    });
                </text>
            } else if (editLott) {
                <text>
                    // Изменение времени
                    $("body").on("focusout", ".timeEdit", function () {
                        var time = $(this).val();
                        var timeArr = time.split(":");

                        var strDate = dayNames[dateLottery.getDay()] + ", " +
                                      dateLottery.getDate() + ' ' +
                                      monthNames[dateLottery.getMonth()] + ' ' +
                                      dateLottery.getFullYear() + ' ';

                        if ((timeArr[0] > 23 || timeArr[0] < 0) || (timeArr[1] > 59 || timeArr[1] < 0)) {
                            if (time == hour + ':' + min) {
                                $('#Date').html(strDate + time);
                            } else {
                                $.ajax({
                                    url: "/Lottery/EditLottery",
                                    type: "POST",
                                    data: {
                                        Id: lotteryId,
                                        Date: `@dateLott.Day.@dateLott.Month.@dateLott.Year ${time}`,
                                        GMT: GMT
                                    },
                                    success: function () {
                                        $('#Date').html(strDate + time);
                                    },
                                    error: function () {
                                        globalError();
                                    }
                                });
                            }
                        } else {
                            $(this).val("00:00");
                        }
                    });
                </text>
            }

            // Количество пользователей
            $(".editCountUserBtn").click(function () {
                $("#CountUser").html("<i class='icon-users'></i> <input class='inputAddLottery' type='text' name='CountUser' placeholder='Кол. пользователей...' value='@Model.CountUserForLottery' />");
            });

            $("body").on("focusout", "input[name='CountUser']", function () {
                var val = $(this).val();
                $('#CountUser').html("<i class='icon-users'></i> @Model.CountUserForLottery.ToString("###,###,###,##0")");
            });

            $("body").on("change", "input[name='CountUser']", function () {
                var val = $(this).val();
                if (val.length != 0) {
                    $.ajax({
                        url: "/Lottery/EditLottery",
                        type: "POST",
                        data: {
                            Id: lotteryId,
                            CountUser: val,
                            EditCountUser: true
                        },
                        success: function () {
                            location.reload();
                        },
                        error: function () {
                            globalError();
                        }
                    });
                }
            });

            // Короткое описание
            $(".editShortDesc").click(function () {
                $(this).fadeOut(0);
                $(".maxChar").fadeIn(0);
                var text = $("#shortDescription .drawText").text();
                $(".maxChar").text(300 - text.length);
                $("#shortDescription .drawText").remove();
                $("#shortDescription").append(`<textarea class="drawText textAddLottery short" name="ShortDescription" placeholder="Напишите короткое описание, отображается в списке розыгрышей.">${text}</textarea>`);
            });

            $("body").on("keyup", "textarea[name='ShortDescription']", function () {
                var val = $(this).val();
                $(".maxChar").text(300 - val.length);
            });

            $("body").on("focusout", "textarea[name='ShortDescription']", function () {
                var val = $(this).val();
                if (val.length > 0 && val.length <= 300) {
                    $("#shortDescription .drawText").remove();
                    $("#shortDescription").append(`<div class="drawText">${val}</div>`);
                    $(".maxChar").fadeOut(0);
                    $(".editShortDesc").fadeIn(0);
                }
            });

            $("body").on("change", "textarea[name='ShortDescription']", function () {
                var val = $(this).val();
                if (val.length > 0 && val.length <= 300) {
                    $.ajax({
                        url: "/Lottery/EditLottery",
                        type: "POST",
                        data: {
                            Id: lotteryId,
                            ShortDescription: val
                        },
                        error: function () {
                            globalError();
                        }
                    });
                }
            });

            // Обычное описание
            $(".editDesc").click(function () {
                var text = $("#description .drawText").text();
                $("#description .drawText").remove();
                $("#description").append(`<textarea class="drawText textAddLottery" name="Text" placeholder="Напишите описание...">${text}</textarea>`);
            });

            $("body").on("focusout", "textarea[name='Text']", function () {
                var val = $(this).val();
                $.ajax({
                    url: "/Lottery/EditLottery",
                    type: "POST",
                    data: {
                        Id: lotteryId,
                        Text: val
                    },
                    success: function () {
                        $("#description .drawText").remove();
                        $("#description").append(`<div class="drawText">${val}</div>`);
                    },
                    error: function () {
                        globalError();
                    }
                });
            });

            // Призы
            $(".editPrize").click(function () {
                $("#addPrize").fadeToggle(0);
                $(".addPrize").fadeToggle(0);
            });

            $(".addPrize").click(function () {
                var name = $("input[name='PrizeName']").val();
                var place = $("input[name='PrizePlace']").val();
                if (name.length > 0) {
                    $.ajax({
                        url: "/Lottery/EditLottery",
                        type: "POST",
                        data: {
                            Id: lotteryId,
                            PrizeName: name,
                            PrizePlace: place
                        },
                        success: function () {
                            var addPrize = $("#addPrize").detach();
                            $(".drawPrizes ol").append(`<li><span>место</span> - ${name}</li>`);
                            var place = $(".drawPrizes ol li").length + 1;
                            $(".drawPrizes ol").append(addPrize);
                            $("input[name='PrizeName']").val("");
                            $("input[name='PrizePlace']").val(place);
                        },
                        error: function () {
                            globalError();
                        }
                    });
                }
            });

            // Ссылки
            $(".editLinksBtn").click(function () {
                $(".nowLinks").fadeToggle(0);
                $(".editLinks").fadeToggle(0);
            });

            // Удаление
            $("body").on("click", ".delLink", function () {
                var inc = parseInt($(this).attr('inc'));
                var length = $(".editLinks .itemLink").length;
                $(this).parent().remove();
                --iLink;
                for (var i = inc; i < length; i++) {
                    $(`input[name='Link[${i + 1}].Type']`).siblings(".icon-cancel").attr("inc", i);
                    $(`input[name='Link[${i + 1}].Type']`).attr("name", `Link[${i}].Type`);
                    $(`input[name='Link[${i + 1}].Name']`).attr("name", `Link[${i}].Name`);
                    $(`input[name='Link[${i + 1}].Link']`).attr("name", `Link[${i}].Link`);
                }
            });

            $(".confirmEditLinks").click(function () {
                var form = `Id=${lotteryId}&` + $(".editLinks").serialize();
                $.ajax({
                    url: "/Lottery/EditLottery",
                    type: "POST",
                    data: form,
                    success: function () {
                        $(".nowLinks").html("");
                        var length = $(".editLinks .itemLink").length;
                        for (var i = 0; i < length; i++) {
                            var icon = $(`input[name='Link[${i}].Type']`).parent().children("i:last").attr("class");
                            var name = $(`input[name='Link[${i}].Name']`).val();
                            var link = $(`input[name='Link[${i}].Link']`).val();
                            $(".nowLinks").append(`<div class="itemLink"><a href="${link}" target="_blank"><i class="${icon}"></i> ${name}</a></div>`);
                        };
                        $(".editLinksBtn").click();
                    }
                });
            });

            $(".editOptionBtn").click(function () {
                $(".editOption").slideToggle(400);
            });

            $(".optCheck").click(function () {
                var name = $(this).attr("name");
                $.ajax({
                    url: "/Lottery/EditOptionLott",
                    type: "POST",
                    data: {
                        Id: lotteryId,
                        Name: name
                    },
                    success: function (req) {
                        if (req == "0") {
                            console.log("Нет ID или имени!!!");
                            globalError();
                        }
                    }
                });
            });
        });

        // Функция добавления ссылки
        function addLink(name) {
            var input = '';
            var icon = 'icon-';

            switch (name) {
                case 'vkontakte':
                    icon += "vk";
                    break;
                case 'facebook':
                    icon += "facebook";
                    break;
                case 'twitch':
                    icon += "twitch";
                    break;
                case 'twitter':
                    icon += "twitter";
                    break;
                case 'youtube':
                    icon += "youtube";
                    break;
                case 'odnoklassniki':
                    icon += "odnoklassniki";
                    break;
                case 'google':
                    icon += "google";
                    break;
                case 'google+':
                    icon += "google-plus";
                    break;
                case 'pinterest':
                    icon += "pinterest-p";
                    break;
                case 'steam':
                    icon += "steam";
                    break;
                case 'github':
                    icon += "github-alt";
                    break;
                default:
                    icon += "share-square-o";
            }

            input = `<div class="itemLink">`
                + `<i class="icon-cancel delLink" link-name="${name}" inc="${iLink}"></i>`
                + `<i class="${icon}"></i> `
                + `<input type="hidden" name="Link[${iLink}].Type" value="${name}" />`
                + `<input class="inputAddLottery nameLink" type="text" name="Link[${iLink}].Name" placeholder="Введите название ссылки..." /><br />`
                + `<input class="inputAddLottery addressLink" type="text" name="Link[${iLink}].Link" placeholder="Введите адрес ссылки..." /></div >`;

            ++iLink;

            $(".drawLinks .editLinks").append(input);
        }
    </script>    
}